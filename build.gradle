/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'aavalos' at '9/18/16 2:01 AM' with Gradle 2.13
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.13/userguide/tutorial_java_projects.html
 */

// Apply the plugins
plugins {
	id 'java'
	id 'application'
	id 'eclipse'
}

mainClassName = 'com.application.view.Main'
project.ext.set('nativeLibsDir', "$buildDir/libs/natives")

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven {
        url "http://clojars.org/repo/"
    }
    flatDir {
       dirs 'libs'
   }
}

// In this section you declare the dependencies for your production and test code
dependencies {
  	compile 'org.slf4j:slf4j-nop:1.7.21'
  	compile 'org.apache.logging.log4j:log4j-api:2.6.2'
  	compile 'org.apache.logging.log4j:log4j-core:2.6.2'
	compile 'org.pcap4j:pcap4j-core:1.6.5'
	compile 'org.pcap4j:pcap4j-packetfactory-static:1.6.5'
	compile group: 'com.h2database', name: 'h2', version: '1.4.193'
	compile "jnetpcap:jnetpcap:1.4.r1425-1f"
	compile 'org.apache.commons:commons-io:1.3.2'
	compile 'com.maxmind.geoip2:geoip2:2.8.0'
	compile group: 'com.vividsolutions', name: 'jts', version: '1.11'
	compile group: 'com.lynden', name: 'GMapsFX', version: '2.0.9'
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
	//compile fileTree(dir: 'lib/SplitCap_2-1', include: '*.exe')
	//compile fileTree(dir: 'lib/SplitCap_2-1', include: '*.dll')
    compile fileTree(dir: 'lib', include: '**/*.*')
    runtime fileTree(dir: 'lib/jnetpcapNative', include: '*.dll');

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

sourceSets {
  main {
    resources {
        srcDirs = ["src/main/java","src/main/resources","lib/"]
        includes = ["**/*.*"]
    }
  }
}

/* Copy the native files */
task copyNativeDeps(type: Copy) {
    from (configurations.compile+configurations.testCompile) {
        include "*.dll"
    }
    into file(project.nativeLibsDir)
}

run.dependsOn copyNativeDeps

/* Make sure we setup the tests to actually copy 
 * the native files and set the paths correctly. */
run {
    //dependsOn copyNativeDeps
    systemProperty "java.library.path", project.nativeLibsDir
}

installApp {
	dependsOn copyNativeDeps
    //systemProperty "java.library.path", project.nativeLibsDir
}